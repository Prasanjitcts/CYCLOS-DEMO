<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="cyclos_test" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.2.3.17. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">demo.cyclos.org</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">5</stringProp>
        <stringProp name="ThreadGroup.ramp_time">5</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/login?_k=1124407b578f34f1c20757d07f40dfe288273ffe" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="principal" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">principal</stringProp>
                  <stringProp name="Argument.value">demo</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">1234</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="principalType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">principalType</stringProp>
                  <stringProp name="Argument.value">username</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/initializationService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getInitializationData&quot;, &quot;params&quot;:[null,null]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/initializationService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=GENERAL.ERRORS&amp;submodule=GENERAL.MENU&amp;submodule=GENERAL.UI&amp;submodule=ACCESS.LOGIN&amp;submodule=MESSAGING.NOTIFICATIONS" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">MESSAGING.NOTIFICATIONS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/push-notifications?clientId=167e3fcd-0cfc-45f1-b82e-cfc57cd7c752_1601386032570&amp;eventTypes=loggedOut,permissionsChanged,newMessage,newNotification,deviceConfirmation,paymentAuthorization,identityProviderCallback&amp;Session-Prefix=pXKqt4lE341jBCPp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">167e3fcd-0cfc-45f1-b82e-cfc57cd7c752_1601386032570</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Session-Prefix</stringProp>
                  <stringProp name="Argument.value">pXKqt4lE341jBCPp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eventTypes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">eventTypes</stringProp>
                  <stringProp name="Argument.value">loggedOut,permissionsChanged,newMessage,newNotification,deviceConfirmation,paymentAuthorization,identityProviderCallback</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">push-notifications</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/event-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/initializationService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getHomeData&quot;, &quot;params&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/initializationService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=BANKING.ACCOUNTS&amp;submodule=BANKING.TRANSFERS" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">BANKING.TRANSFERS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/accountService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getAccountsSummary&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;},null]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/accountService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=BANKING.ACCOUNTS&amp;submodule=BANKING.TRANSACTIONS&amp;submodule=BANKING.TRANSFERS&amp;submodule=BANKING.RATES&amp;submodule=USERS.USERS" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">USERS.USERS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/accountService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getAccountHistoryData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.banking.accounts.AccountVO&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;},&quot;PARAM_NO_UNLIMITED&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/accountService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/accountService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getAccountHistoryStatus&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.banking.accounts.AccountHistoryQuery&quot;, &quot;usersWithImage&quot;:false, &quot;account&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounts.AccountVO&quot;, &quot;owner&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;type&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;active&quot;:true, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;period&quot;:{&quot;class&quot;:&quot;org.cyclos.model.utils.DatePeriodDTO&quot;, &quot;end&quot;:&quot;2020-09-29T23:59:59.999Z&quot;, &quot;begin&quot;:&quot;2019-09-29T00:00:00.000Z&quot;}, &quot;orderBy&quot;:&quot;DATE_DESC&quot;, &quot;fromCurrentAccessClient&quot;:false, &quot;includeGeneratedByAccessClient&quot;:false, &quot;currentPage&quot;:null, &quot;pageSize&quot;:40, &quot;skipTotalCount&quot;:false, &quot;statuses&quot;:[], &quot;accessClients&quot;:[]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/accountService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/accountService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;searchAccountHistory&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.banking.accounts.AccountHistoryQuery&quot;, &quot;usersWithImage&quot;:false, &quot;account&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounts.AccountVO&quot;, &quot;owner&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;type&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;active&quot;:true, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;period&quot;:{&quot;class&quot;:&quot;org.cyclos.model.utils.DatePeriodDTO&quot;, &quot;end&quot;:&quot;2020-09-29T23:59:59.999Z&quot;, &quot;begin&quot;:&quot;2019-09-29T00:00:00.000Z&quot;}, &quot;orderBy&quot;:&quot;DATE_DESC&quot;, &quot;fromCurrentAccessClient&quot;:false, &quot;includeGeneratedByAccessClient&quot;:false, &quot;currentPage&quot;:null, &quot;pageSize&quot;:40, &quot;skipTotalCount&quot;:false, &quot;statuses&quot;:[], &quot;accessClients&quot;:[]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/accountService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=BANKING.TRANSACTIONS&amp;submodule=BANKING.TRANSFERS&amp;submodule=BANKING.ACCOUNTS&amp;submodule=BANKING.RATES&amp;submodule=GENERAL.UI" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">GENERAL.UI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/transactionService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getPaymentData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;},null,null]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/transactionService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/userService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;search&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserQuery&quot;, &quot;ignoreProfileFieldsInList&quot;:true, &quot;currentPage&quot;:0, &quot;pageSize&quot;:2147483647, &quot;onlyContacts&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/userService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/userService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;search&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserQuery&quot;, &quot;locateFirst&quot;:false, &quot;pageSize&quot;:8, &quot;ignoreProfileFieldsInList&quot;:true, &quot;usersToExclude&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}], &quot;roles&quot;:[&quot;MEMBER&quot;,&quot;BROKER&quot;], &quot;keywords&quot;:&quot;nico&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/userService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/transactionService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getPaymentToOwnerData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;},{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserWithFieldsVO&quot;, &quot;display&quot;:&quot;Nicola Tesla&quot;, &quot;shortDisplay&quot;:&quot;nico&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;bg6dF8haifEUxamBtno7LvaDHz85czjtijGMww6aK7nYoVZBa4BbKNWVxeZVniiS_204x247.jpeg&quot;, &quot;width&quot;:204, &quot;height&quot;:247, &quot;convertedToJpeg&quot;:false, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:17795, &quot;name&quot;:&quot;nicola.jpeg&quot;, &quot;id&quot;:&quot;7762070814180938047&quot;, &quot;lastModified&quot;:&quot;2013-05-14T17:51:50.750Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1368553910750&quot;}, &quot;id&quot;:&quot;7762070814178009407&quot;},null]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/transactionService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/transactionService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getPaymentTypeData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;},{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;bg6dF8haifEUxamBtno7LvaDHz85czjtijGMww6aK7nYoVZBa4BbKNWVxeZVniiS_204x247.jpeg&quot;, &quot;width&quot;:204, &quot;height&quot;:247, &quot;convertedToJpeg&quot;:false, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:17795, &quot;name&quot;:&quot;nicola.jpeg&quot;, &quot;id&quot;:&quot;7762070814180938047&quot;, &quot;lastModified&quot;:&quot;2013-05-14T17:51:50.750Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1368553910750&quot;}, &quot;locator&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserLocatorVO&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;display&quot;:&quot;Nicola Tesla&quot;, &quot;shortDisplay&quot;:&quot;nico&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;},{&quot;class&quot;:&quot;org.cyclos.model.banking.transfertypes.TransferTypeWithCurrencyVO&quot;, &quot;currency&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.currencies.CurrencyVO&quot;, &quot;symbol&quot;:&quot;IU&apos;s&quot;, &quot;suffix&quot;:&quot; IU&apos;s&quot;, &quot;precision&quot;:2, &quot;transactionNumberPrefix&quot;:&quot;DEM-&quot;, &quot;transactionNumberSuffix&quot;:&quot;-NMR&quot;, &quot;transactionNumberPattern&quot;:&quot;\\D\\E\\M\\-#####\\-\\N\\M\\R&quot;, &quot;internalName&quot;:&quot;units&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Units&quot;}, &quot;from&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;enabled&quot;:true, &quot;allowFromCustomName&quot;:false, &quot;allowToCustomName&quot;:false, &quot;ignoreAccountLimits&quot;:false, &quot;to&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;requiresAuthorization&quot;:false, &quot;nature&quot;:&quot;PAYMENT&quot;, &quot;internalName&quot;:&quot;memberaccount.memberpayment&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member payment&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/transactionService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/paymentService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;preview&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.banking.transactions.PerformPaymentDTO&quot;, &quot;owner&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;subject&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;bg6dF8haifEUxamBtno7LvaDHz85czjtijGMww6aK7nYoVZBa4BbKNWVxeZVniiS_204x247.jpeg&quot;, &quot;width&quot;:204, &quot;height&quot;:247, &quot;convertedToJpeg&quot;:false, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:17795, &quot;name&quot;:&quot;nicola.jpeg&quot;, &quot;id&quot;:&quot;7762070814180938047&quot;, &quot;lastModified&quot;:&quot;2013-05-14T17:51:50.750Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1368553910750&quot;}, &quot;locator&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserLocatorVO&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;display&quot;:&quot;Nicola Tesla&quot;, &quot;shortDisplay&quot;:&quot;nico&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;amount&quot;:&quot;500.00&quot;, &quot;type&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.transfertypes.TransferTypeWithCurrencyVO&quot;, &quot;currency&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.currencies.CurrencyVO&quot;, &quot;symbol&quot;:&quot;IU&apos;s&quot;, &quot;suffix&quot;:&quot; IU&apos;s&quot;, &quot;precision&quot;:2, &quot;transactionNumberPrefix&quot;:&quot;DEM-&quot;, &quot;transactionNumberSuffix&quot;:&quot;-NMR&quot;, &quot;transactionNumberPattern&quot;:&quot;\\D\\E\\M\\-#####\\-\\N\\M\\R&quot;, &quot;internalName&quot;:&quot;units&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Units&quot;}, &quot;from&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;enabled&quot;:true, &quot;allowFromCustomName&quot;:false, &quot;allowToCustomName&quot;:false, &quot;ignoreAccountLimits&quot;:false, &quot;to&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;requiresAuthorization&quot;:false, &quot;nature&quot;:&quot;PAYMENT&quot;, &quot;internalName&quot;:&quot;memberaccount.memberpayment&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member payment&quot;}, &quot;description&quot;:null, &quot;customValues&quot;:[]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/paymentService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=BANKING.TRANSFERS&amp;submodule=BANKING.RATES&amp;submodule=BANKING.TRANSACTIONS&amp;submodule=ACCESS.PASSWORD_TYPES" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">ACCESS.PASSWORD_TYPES</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/paymentService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;perform&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.banking.transactions.PerformPaymentDTO&quot;, &quot;subject&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;bg6dF8haifEUxamBtno7LvaDHz85czjtijGMww6aK7nYoVZBa4BbKNWVxeZVniiS_204x247.jpeg&quot;, &quot;width&quot;:204, &quot;height&quot;:247, &quot;convertedToJpeg&quot;:false, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:17795, &quot;name&quot;:&quot;nicola.jpeg&quot;, &quot;id&quot;:&quot;7762070814180938047&quot;, &quot;lastModified&quot;:&quot;2013-05-14T17:51:50.750Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1368553910750&quot;}, &quot;locator&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserLocatorVO&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;display&quot;:&quot;Nicola Tesla&quot;, &quot;shortDisplay&quot;:&quot;nico&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;to&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;bg6dF8haifEUxamBtno7LvaDHz85czjtijGMww6aK7nYoVZBa4BbKNWVxeZVniiS_204x247.jpeg&quot;, &quot;width&quot;:204, &quot;height&quot;:247, &quot;convertedToJpeg&quot;:false, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:17795, &quot;name&quot;:&quot;nicola.jpeg&quot;, &quot;id&quot;:&quot;7762070814180938047&quot;, &quot;lastModified&quot;:&quot;2013-05-14T17:51:50.750Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1368553910750&quot;}, &quot;locator&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserLocatorVO&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;display&quot;:&quot;Nicola Tesla&quot;, &quot;shortDisplay&quot;:&quot;nico&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;from&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;locator&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserLocatorVO&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;owner&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;locator&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserLocatorVO&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;type&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.transfertypes.TransferTypeVO&quot;, &quot;from&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;enabled&quot;:true, &quot;allowFromCustomName&quot;:false, &quot;allowToCustomName&quot;:false, &quot;ignoreAccountLimits&quot;:false, &quot;to&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;requiresAuthorization&quot;:false, &quot;nature&quot;:&quot;PAYMENT&quot;, &quot;internalName&quot;:&quot;memberaccount.memberpayment&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member payment&quot;}, &quot;amount&quot;:&quot;500.00&quot;, &quot;customValues&quot;:[], &quot;confirmationPassword&quot;:null}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/paymentService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/push-notifications?clientId=167e3fcd-0cfc-45f1-b82e-cfc57cd7c752_1601386032570&amp;eventTypes=loggedOut,permissionsChanged,newMessage,newNotification,deviceConfirmation,paymentAuthorization,identityProviderCallback&amp;Session-Prefix=pXKqt4lE341jBCPp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">167e3fcd-0cfc-45f1-b82e-cfc57cd7c752_1601386032570</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Session-Prefix</stringProp>
                  <stringProp name="Argument.value">pXKqt4lE341jBCPp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eventTypes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">eventTypes</stringProp>
                  <stringProp name="Argument.value">loggedOut,permissionsChanged,newMessage,newNotification,deviceConfirmation,paymentAuthorization,identityProviderCallback</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">push-notifications</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/event-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=BANKING.TRANSACTIONS&amp;submodule=BANKING.ACCOUNTS&amp;submodule=BANKING.TRANSFERS&amp;submodule=BANKING.AUTHORIZATIONS&amp;submodule=BANKING.RATES&amp;submodule=USERS.CONTACTS" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">USERS.CONTACTS</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/paymentService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getData&quot;, &quot;params&quot;:[&quot;7762070814330377535&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/paymentService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=BANKING.TRANSACTIONS&amp;submodule=BANKING.TRANSFERS&amp;submodule=BANKING.ACCOUNTS&amp;submodule=BANKING.RATES&amp;submodule=GENERAL.UI" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">GENERAL.UI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/transactionService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getPaymentData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;},null,null]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/transactionService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/userService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;search&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserQuery&quot;, &quot;ignoreProfileFieldsInList&quot;:true, &quot;currentPage&quot;:0, &quot;pageSize&quot;:2147483647, &quot;onlyContacts&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/userService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=BANKING.TRANSACTIONS&amp;submodule=BANKING.TRANSFERS&amp;submodule=BANKING.ACCOUNTS&amp;submodule=BANKING.RATES&amp;submodule=GENERAL.UI" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">GENERAL.UI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/transactionService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getReceivePaymentData&quot;, &quot;params&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/transactionService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/userService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;search&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserQuery&quot;, &quot;locateFirst&quot;:false, &quot;pageSize&quot;:8, &quot;ignoreProfileFieldsInList&quot;:true, &quot;usersToExclude&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}], &quot;roles&quot;:[&quot;MEMBER&quot;,&quot;BROKER&quot;], &quot;keywords&quot;:&quot;nic&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/userService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/transactionService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getReceivePaymentFromUserData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserLocatorVO&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;},null]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/transactionService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/transactionService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getReceivePaymentTypeData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserLocatorVO&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;},{&quot;class&quot;:&quot;org.cyclos.model.banking.transfertypes.TransferTypeWithCurrencyVO&quot;, &quot;currency&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.currencies.CurrencyVO&quot;, &quot;symbol&quot;:&quot;IU&apos;s&quot;, &quot;suffix&quot;:&quot; IU&apos;s&quot;, &quot;precision&quot;:2, &quot;transactionNumberPrefix&quot;:&quot;DEM-&quot;, &quot;transactionNumberSuffix&quot;:&quot;-NMR&quot;, &quot;transactionNumberPattern&quot;:&quot;\\D\\E\\M\\-#####\\-\\N\\M\\R&quot;, &quot;internalName&quot;:&quot;units&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Units&quot;}, &quot;from&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;enabled&quot;:true, &quot;allowFromCustomName&quot;:false, &quot;allowToCustomName&quot;:false, &quot;ignoreAccountLimits&quot;:false, &quot;to&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;requiresAuthorization&quot;:false, &quot;nature&quot;:&quot;PAYMENT&quot;, &quot;internalName&quot;:&quot;memberaccount.memberpayment&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member payment&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/transactionService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/paymentService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;previewReceive&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.banking.transactions.PerformPaymentDTO&quot;, &quot;subject&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;owner&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;bg6dF8haifEUxamBtno7LvaDHz85czjtijGMww6aK7nYoVZBa4BbKNWVxeZVniiS_204x247.jpeg&quot;, &quot;width&quot;:204, &quot;height&quot;:247, &quot;convertedToJpeg&quot;:false, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:17795, &quot;name&quot;:&quot;nicola.jpeg&quot;, &quot;id&quot;:&quot;7762070814180938047&quot;, &quot;lastModified&quot;:&quot;2013-05-14T17:51:50.750Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1368553910750&quot;}, &quot;locator&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserLocatorVO&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;display&quot;:&quot;Nicola Tesla&quot;, &quot;shortDisplay&quot;:&quot;nico&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;amount&quot;:&quot;600.00&quot;, &quot;type&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.transfertypes.TransferTypeWithCurrencyVO&quot;, &quot;currency&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.currencies.CurrencyVO&quot;, &quot;symbol&quot;:&quot;IU&apos;s&quot;, &quot;suffix&quot;:&quot; IU&apos;s&quot;, &quot;precision&quot;:2, &quot;transactionNumberPrefix&quot;:&quot;DEM-&quot;, &quot;transactionNumberSuffix&quot;:&quot;-NMR&quot;, &quot;transactionNumberPattern&quot;:&quot;\\D\\E\\M\\-#####\\-\\N\\M\\R&quot;, &quot;internalName&quot;:&quot;units&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Units&quot;}, &quot;from&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;enabled&quot;:true, &quot;allowFromCustomName&quot;:false, &quot;allowToCustomName&quot;:false, &quot;ignoreAccountLimits&quot;:false, &quot;to&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;requiresAuthorization&quot;:false, &quot;nature&quot;:&quot;PAYMENT&quot;, &quot;internalName&quot;:&quot;memberaccount.memberpayment&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member payment&quot;}, &quot;description&quot;:null, &quot;customValues&quot;:[]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/paymentService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/paymentService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;previewReceive&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.banking.transactions.PerformPaymentDTO&quot;, &quot;subject&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;owner&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;bg6dF8haifEUxamBtno7LvaDHz85czjtijGMww6aK7nYoVZBa4BbKNWVxeZVniiS_204x247.jpeg&quot;, &quot;width&quot;:204, &quot;height&quot;:247, &quot;convertedToJpeg&quot;:false, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:17795, &quot;name&quot;:&quot;nicola.jpeg&quot;, &quot;id&quot;:&quot;7762070814180938047&quot;, &quot;lastModified&quot;:&quot;2013-05-14T17:51:50.750Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1368553910750&quot;}, &quot;locator&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserLocatorVO&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;display&quot;:&quot;Nicola Tesla&quot;, &quot;shortDisplay&quot;:&quot;nico&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;amount&quot;:&quot;500.00&quot;, &quot;type&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.transfertypes.TransferTypeWithCurrencyVO&quot;, &quot;currency&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.currencies.CurrencyVO&quot;, &quot;symbol&quot;:&quot;IU&apos;s&quot;, &quot;suffix&quot;:&quot; IU&apos;s&quot;, &quot;precision&quot;:2, &quot;transactionNumberPrefix&quot;:&quot;DEM-&quot;, &quot;transactionNumberSuffix&quot;:&quot;-NMR&quot;, &quot;transactionNumberPattern&quot;:&quot;\\D\\E\\M\\-#####\\-\\N\\M\\R&quot;, &quot;internalName&quot;:&quot;units&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Units&quot;}, &quot;from&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;enabled&quot;:true, &quot;allowFromCustomName&quot;:false, &quot;allowToCustomName&quot;:false, &quot;ignoreAccountLimits&quot;:false, &quot;to&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;requiresAuthorization&quot;:false, &quot;nature&quot;:&quot;PAYMENT&quot;, &quot;internalName&quot;:&quot;memberaccount.memberpayment&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member payment&quot;}, &quot;description&quot;:null, &quot;customValues&quot;:[]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/paymentService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=BANKING.TRANSFERS&amp;submodule=BANKING.RATES&amp;submodule=BANKING.TRANSACTIONS&amp;submodule=ACCESS.PASSWORD_TYPES" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">ACCESS.PASSWORD_TYPES</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/push-notifications?clientId=167e3fcd-0cfc-45f1-b82e-cfc57cd7c752_1601386032570&amp;eventTypes=loggedOut,permissionsChanged,newMessage,newNotification,deviceConfirmation,paymentAuthorization,identityProviderCallback&amp;Session-Prefix=pXKqt4lE341jBCPp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="clientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">clientId</stringProp>
                  <stringProp name="Argument.value">167e3fcd-0cfc-45f1-b82e-cfc57cd7c752_1601386032570</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">Session-Prefix</stringProp>
                  <stringProp name="Argument.value">pXKqt4lE341jBCPp</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="eventTypes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">eventTypes</stringProp>
                  <stringProp name="Argument.value">loggedOut,permissionsChanged,newMessage,newNotification,deviceConfirmation,paymentAuthorization,identityProviderCallback</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">push-notifications</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/event-stream</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=BANKING.TRANSACTIONS&amp;submodule=BANKING.TRANSFERS&amp;submodule=BANKING.ACCOUNTS&amp;submodule=BANKING.RATES&amp;submodule=GENERAL.UI" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">GENERAL.UI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/externalPaymentService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getExternalPaymentData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/externalPaymentService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/externalPaymentService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getExternalPaymentTypeData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;},{&quot;class&quot;:&quot;org.cyclos.model.banking.transfertypes.TransferTypeWithCurrencyVO&quot;, &quot;currency&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.currencies.CurrencyVO&quot;, &quot;symbol&quot;:&quot;IU&apos;s&quot;, &quot;suffix&quot;:&quot; IU&apos;s&quot;, &quot;precision&quot;:2, &quot;transactionNumberPrefix&quot;:&quot;DEM-&quot;, &quot;transactionNumberSuffix&quot;:&quot;-NMR&quot;, &quot;transactionNumberPattern&quot;:&quot;\\D\\E\\M\\-#####\\-\\N\\M\\R&quot;, &quot;internalName&quot;:&quot;units&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Units&quot;}, &quot;from&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;enabled&quot;:true, &quot;allowFromCustomName&quot;:false, &quot;allowToCustomName&quot;:false, &quot;ignoreAccountLimits&quot;:false, &quot;to&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;requiresAuthorization&quot;:false, &quot;nature&quot;:&quot;PAYMENT&quot;, &quot;internalName&quot;:&quot;memberaccount.memberpayment&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member payment&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/externalPaymentService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/content/loadTranslations?_k=1124407b578f34f1c20757d07f40dfe288273ffe&amp;cacheKey=1124407b578f34f1c20757d07f40dfe288273ffe&amp;languageId=7762070814178011455&amp;languageLastModified=1539609073322&amp;submodule=BANKING.TRANSACTIONS&amp;submodule=BANKING.TRANSFERS&amp;submodule=BANKING.ACCOUNTS&amp;submodule=BANKING.RATES&amp;submodule=GENERAL.UI" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="languageLastModified" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageLastModified</stringProp>
                  <stringProp name="Argument.value">1539609073322</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cacheKey" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cacheKey</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="languageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">languageId</stringProp>
                  <stringProp name="Argument.value">7762070814178011455</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="submodule" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">submodule</stringProp>
                  <stringProp name="Argument.value">GENERAL.UI</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_k</stringProp>
                  <stringProp name="Argument.value">1124407b578f34f1c20757d07f40dfe288273ffe</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">content/loadTranslations</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/paymentRequestService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getRequestData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;},null,null]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/paymentRequestService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/userService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;search&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserQuery&quot;, &quot;ignoreProfileFieldsInList&quot;:true, &quot;currentPage&quot;:0, &quot;pageSize&quot;:2147483647, &quot;onlyContacts&quot;:true}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/userService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/userService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;search&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserQuery&quot;, &quot;locateFirst&quot;:false, &quot;pageSize&quot;:8, &quot;ignoreProfileFieldsInList&quot;:true, &quot;usersToExclude&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}], &quot;roles&quot;:[&quot;MEMBER&quot;,&quot;BROKER&quot;], &quot;keywords&quot;:&quot;nico&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/userService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/paymentRequestService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getRequestPaymentPayerData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;},{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserWithFieldsVO&quot;, &quot;display&quot;:&quot;Nicola Tesla&quot;, &quot;shortDisplay&quot;:&quot;nico&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;bg6dF8haifEUxamBtno7LvaDHz85czjtijGMww6aK7nYoVZBa4BbKNWVxeZVniiS_204x247.jpeg&quot;, &quot;width&quot;:204, &quot;height&quot;:247, &quot;convertedToJpeg&quot;:false, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:17795, &quot;name&quot;:&quot;nicola.jpeg&quot;, &quot;id&quot;:&quot;7762070814180938047&quot;, &quot;lastModified&quot;:&quot;2013-05-14T17:51:50.750Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1368553910750&quot;}, &quot;id&quot;:&quot;7762070814178009407&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/paymentRequestService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/paymentRequestService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;getRequestPaymentTypeData&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;},{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;bg6dF8haifEUxamBtno7LvaDHz85czjtijGMww6aK7nYoVZBa4BbKNWVxeZVniiS_204x247.jpeg&quot;, &quot;width&quot;:204, &quot;height&quot;:247, &quot;convertedToJpeg&quot;:false, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:17795, &quot;name&quot;:&quot;nicola.jpeg&quot;, &quot;id&quot;:&quot;7762070814180938047&quot;, &quot;lastModified&quot;:&quot;2013-05-14T17:51:50.750Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1368553910750&quot;}, &quot;display&quot;:&quot;Nicola Tesla&quot;, &quot;shortDisplay&quot;:&quot;nico&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;},{&quot;class&quot;:&quot;org.cyclos.model.banking.transfertypes.TransferTypeWithCurrencyVO&quot;, &quot;currency&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.currencies.CurrencyVO&quot;, &quot;symbol&quot;:&quot;IU&apos;s&quot;, &quot;suffix&quot;:&quot; IU&apos;s&quot;, &quot;precision&quot;:2, &quot;transactionNumberPrefix&quot;:&quot;DEM-&quot;, &quot;transactionNumberSuffix&quot;:&quot;-NMR&quot;, &quot;transactionNumberPattern&quot;:&quot;\\D\\E\\M\\-#####\\-\\N\\M\\R&quot;, &quot;internalName&quot;:&quot;units&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Units&quot;}, &quot;from&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;enabled&quot;:true, &quot;allowFromCustomName&quot;:false, &quot;allowToCustomName&quot;:false, &quot;ignoreAccountLimits&quot;:false, &quot;to&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;requiresAuthorization&quot;:false, &quot;nature&quot;:&quot;PAYMENT&quot;, &quot;internalName&quot;:&quot;memberaccount.memberpayment&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member payment&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/paymentRequestService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://demo.cyclos.org/web-rpc/paymentRequestService" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operation&quot;:&quot;send&quot;, &quot;params&quot;:[{&quot;class&quot;:&quot;org.cyclos.model.banking.transactions.SendPaymentRequestDTO&quot;, &quot;expirationDate&quot;:null, &quot;scheduling&quot;:&quot;NOT_SCHEDULED&quot;, &quot;owner&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;34O45tjEVfcvKmIdrRGbRhauxsHMNYL7A2200hjb5h1dD6LI9cMsQmmnNU3YLX0R_960x960.jpeg&quot;, &quot;width&quot;:960, &quot;height&quot;:960, &quot;convertedToJpeg&quot;:true, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:70606, &quot;name&quot;:&quot;Ann_Henderson&quot;, &quot;id&quot;:&quot;7762070814193495359&quot;, &quot;lastModified&quot;:&quot;2018-04-25T18:15:54.024Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1524680154024&quot;}, &quot;display&quot;:&quot;Demo user&quot;, &quot;shortDisplay&quot;:&quot;demo&quot;, &quot;id&quot;:&quot;7762070814178015807&quot;}, &quot;subject&quot;:{&quot;class&quot;:&quot;org.cyclos.model.users.users.UserVO&quot;, &quot;image&quot;:{&quot;class&quot;:&quot;org.cyclos.model.system.images.ImageVO&quot;, &quot;key&quot;:&quot;bg6dF8haifEUxamBtno7LvaDHz85czjtijGMww6aK7nYoVZBa4BbKNWVxeZVniiS_204x247.jpeg&quot;, &quot;width&quot;:204, &quot;height&quot;:247, &quot;convertedToJpeg&quot;:false, &quot;nature&quot;:&quot;USER&quot;, &quot;contentType&quot;:&quot;image/jpeg&quot;, &quot;length&quot;:17795, &quot;name&quot;:&quot;nicola.jpeg&quot;, &quot;id&quot;:&quot;7762070814180938047&quot;, &quot;lastModified&quot;:&quot;2013-05-14T17:51:50.750Z&quot;, &quot;lastModifiedInMillis&quot;:&quot;1368553910750&quot;}, &quot;display&quot;:&quot;Nicola Tesla&quot;, &quot;shortDisplay&quot;:&quot;nico&quot;, &quot;id&quot;:&quot;7762070814178009407&quot;}, &quot;amount&quot;:&quot;500.00&quot;, &quot;type&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.transfertypes.TransferTypeWithCurrencyVO&quot;, &quot;currency&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.currencies.CurrencyVO&quot;, &quot;symbol&quot;:&quot;IU&apos;s&quot;, &quot;suffix&quot;:&quot; IU&apos;s&quot;, &quot;precision&quot;:2, &quot;transactionNumberPrefix&quot;:&quot;DEM-&quot;, &quot;transactionNumberSuffix&quot;:&quot;-NMR&quot;, &quot;transactionNumberPattern&quot;:&quot;\\D\\E\\M\\-#####\\-\\N\\M\\R&quot;, &quot;internalName&quot;:&quot;units&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Units&quot;}, &quot;from&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;enabled&quot;:true, &quot;allowFromCustomName&quot;:false, &quot;allowToCustomName&quot;:false, &quot;ignoreAccountLimits&quot;:false, &quot;to&quot;:{&quot;class&quot;:&quot;org.cyclos.model.banking.accounttypes.AccountTypeVO&quot;, &quot;nature&quot;:&quot;USER&quot;, &quot;internalName&quot;:&quot;memberaccount&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member account&quot;}, &quot;requiresAuthorization&quot;:false, &quot;nature&quot;:&quot;PAYMENT&quot;, &quot;internalName&quot;:&quot;memberaccount.memberpayment&quot;, &quot;global&quot;:false, &quot;id&quot;:&quot;7762070814178012479&quot;, &quot;name&quot;:&quot;Member payment&quot;}, &quot;description&quot;:null, &quot;customValues&quot;:[]}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">web-rpc/paymentRequestService</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Session-Prefix" elementType="Header">
                  <stringProp name="Header.name">Session-Prefix</stringProp>
                  <stringProp name="Header.value">pXKqt4lE341jBCPp</stringProp>
                </elementProp>
                <elementProp name="Channel" elementType="Header">
                  <stringProp name="Header.name">Channel</stringProp>
                  <stringProp name="Header.value">main</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
